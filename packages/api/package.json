{
	"name": "@stela/api",
	"version": "1.0.0",
	"description": "Permanent.org's API server",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/PermanentOrg/stela.git"
	},
	"author": "Permanent.org",
	"license": "AGPL-3.0",
	"bugs": {
		"url": "https://github.com/PermanentOrg/stela/issues"
	},
	"homepage": "https://permanent.org",
	"engines": {
		"node": ">=18.0"
	},
	"main": "dist/index.js",
	"scripts": {
		"check-types": "tsc --noEmit",
		"check-format": "prettier --check src",
		"eslint": "eslint --max-warnings 0 ./src --ext .ts",
		"lint-sql": "docker run -i --rm -v $PWD:/sql sqlfluff/sqlfluff:2.3.5 lint --dialect postgres --nocolor src/*/queries/ src/*/fixtures",
		"lint-docs": "redocly lint docs/src/api.yaml",
		"lint": "npm run check-format && npm run check-types && npm run eslint && npm run lint-sql && npm run lint-docs",
		"build": "rm -rf dist/* && tsc -p tsconfig.build.json && tscp -p tsconfig.tscp.json",
		"start:watch": "rm -rf dist/* && tsc-watch --onSuccess \"npm run start\"",
		"start": "tscp -p tsconfig.tscp.json && node dist/index.js",
		"start-containers": "(cd ../..; docker compose up -d --build stela)",
		"clear-database": "psql postgresql://postgres:permanent@localhost:5432 -c 'DROP DATABASE IF EXISTS test_permanent;'",
		"create-database": "psql postgresql://postgres:permanent@localhost:5432 -c 'CREATE DATABASE test_permanent;'",
		"set-up-database": "docker exec --env='PGPASSWORD=permanent' devenv-database-1 pg_dump -U postgres permanent --schema-only | psql postgresql://postgres:permanent@localhost:5432/test_permanent",
		"clear-database-ci": "psql postgresql://postgres:permanent@database:5432 -c 'DROP DATABASE IF EXISTS test_permanent;'",
		"create-database-ci": "psql postgresql://postgres:permanent@database:5432 -c 'CREATE DATABASE test_permanent;'",
		"set-up-database-ci": "pg_dump postgresql://postgres:permanent@database:5432/permanent --schema-only | psql postgresql://postgres:permanent@database:5432/test_permanent",
		"test": "npm run start-containers && npm run clear-database && npm run create-database && npm run set-up-database && (cd ../..; docker compose run stela node --experimental-vm-modules ../../node_modules/jest/bin/jest.js -i --silent=false)",
		"test-ci": "npm run clear-database-ci && npm run create-database-ci && npm run set-up-database-ci && node --experimental-vm-modules ../../node_modules/jest/bin/jest.js -i --coverage"
	},
	"dependencies": {
		"@aws-sdk/client-sns": "^3.370.0",
		"@fusionauth/typescript-client": "^1.42.0",
		"@mailchimp/mailchimp_marketing": "^3.0.80",
		"@mailchimp/mailchimp_transactional": "1.0.59",
		"@sentry/node": "^7.57.0",
		"@stela/logger": "^1.0.0",
		"@stela/permanent_models": "^1.0.0",
		"@types/http-errors": "^2.0.1",
		"body-parser": "^1.20.3",
		"cors": "^2.8.5",
		"dotenv": "^16.5.0",
		"express": "^5.1.0",
		"express-winston": "^4.1.0",
		"http-errors": "^2.0.0",
		"joi": "^17.13.3",
		"memoizee": "^0.4.17",
		"mixpanel": "^0.18.0",
		"newrelic": "^11.22.0",
		"node-fetch": "^2.6.9",
		"pg": "^8.5.1",
		"require-env-variable": "^4.0.2",
		"tinypg": "^7.0.1",
		"ts-md5": "^1.3.1",
		"ua-parser-js": "^1.0.37",
		"uuid": "^11.1.0"
	},
	"devDependencies": {
		"@types/jest-when": "^3.5.5",
		"@types/memoizee": "^0.4.12",
		"@types/newrelic": "^9.14.4",
		"@types/ua-parser-js": "^0.7.39",
		"nock": "^14.0.5",
		"jest-when": "^3.7.0",
		"supertest": "^7.1.0"
	}
}
