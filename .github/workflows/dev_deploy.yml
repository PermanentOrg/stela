name: Deploy to dev
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  run_tests:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  generate_image_tags:
    uses: ./.github/workflows/generate_image_tags.yml
    secrets: inherit

  build_images:
    uses: ./.github/workflows/build.yml
    secrets: inherit

  deploy:
    needs:
      - run_tests
      - build_images
      - generate_image_tags
    runs-on: ubuntu-24.04
    env:
      API_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.API_IMAGE_TAG }}
      AM_CLEANUP_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.AM_CLEANUP_IMAGE_TAG }}
      RECORD_THUMBNAIL_LAMBDA_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.RECORD_THUMBNAIL_LAMBDA_IMAGE_TAG }}
      THUMBNAIL_REFRESH_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.THUMBNAIL_REFRESH_IMAGE_TAG }}
      FILE_URL_REFRESH_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.FILE_URL_REFRESH_IMAGE_TAG }}
      ACCESS_COPY_LAMBDA_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.ACCESS_COPY_LAMBDA_IMAGE_TAG }}
      ACCOUNT_SPACE_UPDATE_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.ACCOUNT_SPACE_UPDATE_IMAGE_TAG }}
      TRIGGER_ARCHIVEMATICA_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.TRIGGER_ARCHIVEMATICA_IMAGE_TAG }}
      METADATA_ATTACHER_LAMBDA_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.METADATA_ATTACHER_LAMBDA_IMAGE_TAG }}
    defaults:
      run:
        working-directory: ./terraform/test_cluster
    steps:
      - uses: actions/checkout@v5
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -input=false \
          -var "image_overrides={
            \"access-copy-dev-lambda\"           = \"$ACCESS_COPY_LAMBDA_IMAGE_TAG\",
            \"account-space-update-dev-lambda\"  = \"$ACCOUNT_SPACE_UPDATE_IMAGE_TAG\",
            \"archivematica-cleanup-dev\"        = \"$AM_CLEANUP_IMAGE_TAG\",
            \"file-url-refresh-dev\"             = \"$FILE_URL_REFRESH_IMAGE_TAG\",
            \"metadata-attacher-dev-lambda\"     = \"$METADATA_ATTACHER_LAMBDA_IMAGE_TAG\",
            \"record-thumbnail-dev-lambda\"      = \"$RECORD_THUMBNAIL_LAMBDA_IMAGE_TAG\",
            \"stela-dev\"                        = \"$API_IMAGE_TAG\",
            \"thumbnail-refresh-dev\"            = \"$THUMBNAIL_REFRESH_IMAGE_TAG\",
            \"trigger-archivematica-dev-lambda\" = \"$TRIGGER_ARCHIVEMATICA_IMAGE_TAG\"
          }"
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false \
          -var "image_overrides={
            \"access-copy-dev-lambda\"           = \"$ACCESS_COPY_LAMBDA_IMAGE_TAG\",
            \"account-space-update-dev-lambda\"  = \"$ACCOUNT_SPACE_UPDATE_IMAGE_TAG\",
            \"archivematica-cleanup-dev\"        = \"$AM_CLEANUP_IMAGE_TAG\",
            \"file-url-refresh-dev\"             = \"$FILE_URL_REFRESH_IMAGE_TAG\",
            \"metadata-attacher-dev-lambda\"     = \"$METADATA_ATTACHER_LAMBDA_IMAGE_TAG\",
            \"record-thumbnail-dev-lambda\"      = \"$RECORD_THUMBNAIL_LAMBDA_IMAGE_TAG\",
            \"stela-dev\"                        = \"$API_IMAGE_TAG\",
            \"thumbnail-refresh-dev\"            = \"$THUMBNAIL_REFRESH_IMAGE_TAG\",
            \"trigger-archivematica-dev-lambda\" = \"$TRIGGER_ARCHIVEMATICA_IMAGE_TAG\"
          }"
